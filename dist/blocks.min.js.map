{"version":3,"sources":["blocks.js"],"names":["validat","data","str","length","String","prototype","startsWith","this","substring","endsWith","contains","indexOf","joinPath","s","angular","module","httpHandleProvider","config","baseUrl","$get","provider","exceptionHandlerProvider","appErrorPrefix","http","$http","logger","httpHandler","get","uri","params","method","url","getBaseUrl","post","parseData","headers","Content-Type","del","put","$","param","Error","delete","$inject","factory","$log","success","message","info","log","debug","warn","error","routehelper","$rootScope","init","stateChangeError","stateChangeSuccess","stateNotFound","$on","event","toState","toParams","fromState","warning","to","$provide","decorator","exceptionHandlerDecorator","$delegate","exceptionHandler","exception","cause","errorData"],"mappings":"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","file":"blocks.min.js","sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  // start with\r\n  String.prototype.startsWith = function (str) {\r\n    return validat(this, str) && this.substring(0, str.length) === str;\r\n  }\r\n\r\n  // end with\r\n  String.prototype.endsWith = function (str) {\r\n    return validat(this, str) && this.substring(this.length - str.length) === str;\r\n  }\r\n\r\n  // contain\r\n  String.prototype.contains = function (str) {\r\n    return validat(this, str) && this.indexOf(str) >= 0;\r\n  }\r\n\r\n  // join other path to this\r\n  String.prototype.joinPath = function (str) {\r\n    var s = this;\r\n    if (!this.endsWith('/') && !this.endsWith('\\\\')) {\r\n      s += '/';\r\n    }\r\n    if (str.startsWith('/') || str.startsWith('\\\\')) {\r\n      s += str.substring(1);\r\n    } else {\r\n      s += str;\r\n    }\r\n    return s;\r\n  }\r\n\r\n  function validat(data, str) {\r\n    if (!data || !str) {\r\n      return false;\r\n    }\r\n    if (data.length < str.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.http', [\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.exception', [\r\n    // blocks\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  // logger\r\n  angular.module('blocks.logger', []);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.routehelper', [\r\n    // blocks\r\n    'blocks.logger',\r\n    // assets\r\n    'ui.router'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.http')\r\n    .provider('httpHandler', httpHandleProvider);\r\n\r\n  /** @ngInject */\r\n  function httpHandleProvider() {\r\n    /* jshint validthis:true */\r\n    this.config = {\r\n      baseUrl: '', // baseUrl\r\n    }\r\n\r\n    this.$get = function () {\r\n      return {\r\n        config: this.config\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.exception')\r\n    .provider('exceptionHandler', exceptionHandlerProvider);\r\n\r\n  function exceptionHandlerProvider() {\r\n    /* jshint validthis:true */\r\n    this.config = {\r\n      appErrorPrefix: 'front-' // error log's prefix\r\n    };\r\n\r\n    this.$get = function () {\r\n      return {\r\n        config: this.config\r\n      };\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  http.$inject = [\"$http\", \"logger\", \"httpHandler\"];\r\n  angular.module('blocks.http')\r\n    .factory('http', http);\r\n\r\n  /* @ngInject */\r\n  function http($http, logger, httpHandler) {\r\n\r\n    return {\r\n      get: get,\r\n      post: post,\r\n      delete: del,\r\n      put: put\r\n    }\r\n\r\n    function get(uri, params) {\r\n\r\n      return $http({\r\n        method: 'GET',\r\n        url: getBaseUrl(uri),\r\n        params: params\r\n      });\r\n    }\r\n\r\n    function post(uri, params) {\r\n      return $http({\r\n        method: 'POST',\r\n        url: getBaseUrl(uri),\r\n        data: parseData(params),\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      });\r\n    }\r\n\r\n    function del(uri, params) {\r\n      return $http({\r\n        method: 'DELETE',\r\n        url: getBaseUrl(uri),\r\n        params: params\r\n      });\r\n    }\r\n\r\n    function put(uri, params) {\r\n      return $http({\r\n        method: 'PUT',\r\n        url: getBaseUrl(uri),\r\n        data: parseData(params),\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n\r\n    function parseData(params) {\r\n      if (!params) {\r\n        return '';\r\n      }\r\n      if (typeof params == 'string') {\r\n        return params;\r\n      }\r\n      if (typeof params == 'object') {\r\n        return $.param(params);\r\n      }\r\n      throw new Error('con\\'t constant type ' + (typeof params));\r\n    }\r\n\r\n    function getBaseUrl(uri) {\r\n      return httpHandler.config.baseUrl.joinPath(uri);\r\n    }\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  logger.$inject = [\"$log\"];\r\n  angular.module('blocks.logger')\r\n    .factory('logger', logger);\r\n\r\n  /* @ngInject */\r\n  function logger($log) {\r\n    return {\r\n      success: success,\r\n      log: log,\r\n      debug: debug,\r\n      info: info,\r\n      warn: warn,\r\n      error: error,\r\n    };\r\n\r\n    /////////////////////\r\n\r\n    function success(message, data) {\r\n      $log.info('Success: ' + message, data);\r\n    }\r\n\r\n    function log(message, data) {\r\n      $log.log('Log: ' + message, data);\r\n    }\r\n\r\n    function debug(message, data) {\r\n      $log.debug('Debug: ' + message, data);\r\n    }\r\n\r\n    function info(message, data) {\r\n      $log.info('Info: ' + message, data);\r\n    }\r\n\r\n    function warn(message, data) {\r\n      $log.warn('Warning: ' + message, data);\r\n    }\r\n\r\n    function error(message, data) {\r\n      $log.error('Error: ' + message, data);\r\n    }\r\n  }\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  routehelper.$inject = [\"$rootScope\", \"logger\"];\r\n  angular.module('blocks.routehelper')\r\n    .factory('routehelper', routehelper);\r\n\r\n  /* @ngInject */\r\n  function routehelper($rootScope, logger) {\r\n\r\n    return {\r\n      'init': init\r\n    };\r\n\r\n    ///////////////\r\n\r\n    function init() {\r\n      stateChangeError();\r\n      stateChangeSuccess();\r\n      stateNotFound();\r\n    }\r\n\r\n    function stateChangeError() {\r\n      $rootScope.$on('$stateChangeError',\r\n        function (event, toState, toParams, fromState) {\r\n          logger.error('change state error.', [fromState, toState]);\r\n          // $location.path(routePath);\r\n        }\r\n      );\r\n    }\r\n\r\n    function stateChangeSuccess() {\r\n      $rootScope.$on('$stateChangeSuccess',\r\n        function (event, toState) {\r\n          logger.success('change state success. state = ', toState);\r\n        }\r\n      );\r\n    }\r\n\r\n    function stateNotFound() {\r\n      $rootScope.$on('$stateNotFound',\r\n        function (event, toState) {\r\n          logger.warning('state not found. state = ', toState.to);\r\n          logger.warning('state not found. params = ', toState.toParams);\r\n        }\r\n      );\r\n    }\r\n  }\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  config.$inject = [\"$provide\"];\r\n  exceptionHandlerDecorator.$inject = [\"$delegate\", \"exceptionHandler\", \"logger\"];\r\n  angular.module('blocks.exception')\r\n    .config(config);\r\n\r\n  /* @ngInject */\r\n  function config($provide) {\r\n    // add prefix to log message\r\n    $provide.decorator('$exceptionHandler', exceptionHandlerDecorator);\r\n  }\r\n\r\n  /* @ngInject */\r\n  function exceptionHandlerDecorator($delegate, exceptionHandler, logger) {\r\n    var appErrorPrefix = exceptionHandler.config.appErrorPrefix;\r\n    return function (exception, cause) {\r\n\r\n      $delegate(exception, cause);\r\n\r\n      var errorData = {\r\n        exception: exception,\r\n        cause: cause\r\n      };\r\n      exception.message = appErrorPrefix + exception.message;\r\n      logger.error(exception.message, errorData);\r\n    };\r\n  }\r\n\r\n})();"],"sourceRoot":"/source/"}