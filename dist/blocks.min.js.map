{"version":3,"sources":["blocks.js"],"names":["validat","data","str","length","String","prototype","startsWith","this","substring","endsWith","contains","indexOf","joinPath","s","getFileSuffix","undefined","index","getFileName","base64ToImage","filename","base64","bytes","window","atob","split","ab","ArrayBuffer","ia","Uint8Array","i","charCodeAt","type","blob","Blob","name","angular","module","exceptionHandlerProvider","config","appErrorPrefix","$get","provider","httpHandleProvider","baseUrl","urlencodedHeader","Content-Type","http","$http","logger","httpHandler","get","uri","params","headers","method","url","getBaseUrl","post","parseData","extend","del","put","call","methodName","Error","$","param","delete","$inject","factory","$log","success","message","info","log","debug","warn","error","routehelper","$rootScope","init","stateChangeError","stateChangeSuccess","stateNotFound","$on","event","toState","toParams","fromState","warning","to","$provide","decorator","exceptionHandlerDecorator","$delegate","exceptionHandler","exception","cause","errorData"],"mappings":"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","file":"blocks.min.js","sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  // start with\r\n  String.prototype.startsWith = function (str) {\r\n    return validat(this, str) && this.substring(0, str.length) === str;\r\n  }\r\n\r\n  // end with\r\n  String.prototype.endsWith = function (str) {\r\n    return validat(this, str) && this.substring(this.length - str.length) === str;\r\n  }\r\n\r\n  // contain\r\n  String.prototype.contains = function (str) {\r\n    return validat(this, str) && this.indexOf(str) >= 0;\r\n  }\r\n\r\n  // join other path to this\r\n  String.prototype.joinPath = function (str) {\r\n    var s = this;\r\n    if (s === '') {\r\n      return str;\r\n    }\r\n    if (!this.endsWith('/') && !this.endsWith('\\\\')) {\r\n      s += '/';\r\n    }\r\n    if (str.startsWith('/') || str.startsWith('\\\\')) {\r\n      s += str.substring(1);\r\n    } else {\r\n      s += str;\r\n    }\r\n    return s;\r\n  }\r\n\r\n  // get file suffix\r\n  String.prototype.getFileSuffix = function () {\r\n    var str = this;\r\n    if (str === undefined || str.length === 0) {\r\n      return '';\r\n    }\r\n    var index = str.indexOf('.');\r\n    if (index === -1) {\r\n      return '';\r\n    }\r\n    return str.substring(index + 1);\r\n  }\r\n\r\n  // get file name\r\n  String.prototype.getFileName = function () {\r\n    var str = this;\r\n    if (str === undefined || str.length === 0) {\r\n      return '';\r\n    }\r\n    var index = str.indexOf('.');\r\n    if (index === -1) {\r\n      return '';\r\n    }\r\n    return str.substring(0, index);\r\n  }\r\n\r\n  // base64 to image\r\n  String.prototype.base64ToImage = function (filename) {\r\n\r\n    var base64 = this;\r\n\r\n    var bytes = window.atob(base64.split(',')[1]); //去掉url的头，并转换为byte\r\n    //处理异常,将ascii码小于0的转换为大于0\r\n    var ab = new ArrayBuffer(bytes.length);\r\n    var ia = new Uint8Array(ab);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n      ia[i] = bytes.charCodeAt(i);\r\n    }\r\n\r\n    var type = 'image/' + filename.getFileSuffix;\r\n\r\n    var blob = new Blob([ab], {\r\n      type: type\r\n    });\r\n\r\n    blob.name = filename;\r\n\r\n    return blob;\r\n  }\r\n\r\n  function validat(data, str) {\r\n    if (!data || !str) {\r\n      return false;\r\n    }\r\n    if (data.length < str.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.exception', [\r\n    // blocks\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.http', [\r\n    'blocks.logger'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  // logger\r\n  angular.module('blocks.logger', []);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.routehelper', [\r\n    // blocks\r\n    'blocks.logger',\r\n    // assets\r\n    'ui.router'\r\n  ]);\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.exception')\r\n    .provider('exceptionHandler', exceptionHandlerProvider);\r\n\r\n  function exceptionHandlerProvider() {\r\n    /* jshint validthis:true */\r\n    this.config = {\r\n      appErrorPrefix: 'front-' // error log's prefix\r\n    };\r\n\r\n    this.$get = function () {\r\n      return {\r\n        config: this.config\r\n      };\r\n    };\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  angular.module('blocks.http')\r\n    .provider('httpHandler', httpHandleProvider);\r\n\r\n  /** @ngInject */\r\n  function httpHandleProvider() {\r\n    /* jshint validthis:true */\r\n    this.config = {\r\n      baseUrl: '', // baseUrl\r\n      urlencodedHeader: { // http post urlencoded header\r\n        'Content-Type': 'application/x-www-form-urlencoded'\r\n      }\r\n    }\r\n\r\n    this.$get = function () {\r\n      return {\r\n        config: this.config\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  http.$inject = [\"$http\", \"logger\", \"httpHandler\"];\r\n  angular.module('blocks.http')\r\n    .factory('http', http);\r\n\r\n  /* @ngInject */\r\n  function http($http, logger, httpHandler) {\r\n\r\n    return {\r\n      get: get,\r\n      post: post,\r\n      delete: del,\r\n      put: put,\r\n      call: call\r\n    }\r\n\r\n    function get(uri, params, headers) {\r\n\r\n      return $http({\r\n        method: 'GET',\r\n        url: getBaseUrl(uri),\r\n        params: params,\r\n        headers: headers\r\n      });\r\n    }\r\n\r\n    function post(uri, params, headers) {\r\n      return $http({\r\n        method: 'POST',\r\n        url: getBaseUrl(uri),\r\n        data: parseData(params),\r\n        headers: angular.extend({}, httpHandler.config.urlencodedHeader, headers)\r\n      });\r\n    }\r\n\r\n    function del(uri, params, headers) {\r\n      return $http({\r\n        method: 'DELETE',\r\n        url: getBaseUrl(uri),\r\n        params: params,\r\n        headers: headers\r\n      });\r\n    }\r\n\r\n    function put(uri, params, headers) {\r\n      return $http({\r\n        method: 'PUT',\r\n        url: getBaseUrl(uri),\r\n        data: parseData(params),\r\n        headers: angular.extend({}, httpHandler.config.urlencodedHeader, headers)\r\n      });\r\n    }\r\n\r\n    function call(methodName, uri, params, headers) {\r\n      switch (methodName) {\r\n      case 'GET':\r\n      case 'get':\r\n        return get(uri, params, headers);\r\n      case 'POST':\r\n      case 'post':\r\n        return post(uri, params, headers);\r\n      case 'DELETE':\r\n      case 'DEL':\r\n      case 'delete':\r\n      case 'del':\r\n        return del(uri, params, headers);\r\n      case 'PUT':\r\n      case 'put':\r\n        return put(uri, params, headers);\r\n      default:\r\n        throw new Error('there is can not constant methodName ' + methodName);\r\n      }\r\n    }\r\n\r\n\r\n    function parseData(params) {\r\n      if (!params) {\r\n        return '';\r\n      }\r\n      if (typeof params == 'string') {\r\n        return params;\r\n      }\r\n      if (typeof params == 'object') {\r\n        return $.param(params);\r\n      }\r\n      throw new Error('con\\'t constant type ' + (typeof params));\r\n    }\r\n\r\n    function getBaseUrl(uri) {\r\n      if (httpHandler.config.baseUrl === '') {\r\n        return uri;\r\n      }\r\n      if (uri.startsWith('http://') || uri.startsWith('https://')) {\r\n        return uri;\r\n      }\r\n      return httpHandler.config.baseUrl.joinPath(uri);\r\n    }\r\n\r\n  }\r\n\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  logger.$inject = [\"$log\"];\r\n  angular.module('blocks.logger')\r\n    .factory('logger', logger);\r\n\r\n  /* @ngInject */\r\n  function logger($log) {\r\n    return {\r\n      success: success,\r\n      log: log,\r\n      debug: debug,\r\n      info: info,\r\n      warn: warn,\r\n      error: error,\r\n    };\r\n\r\n    /////////////////////\r\n\r\n    function success(message, data) {\r\n      $log.info('Success: ' + message, data);\r\n    }\r\n\r\n    function log(message, data) {\r\n      $log.log('Log: ' + message, data);\r\n    }\r\n\r\n    function debug(message, data) {\r\n      $log.debug('Debug: ' + message, data);\r\n    }\r\n\r\n    function info(message, data) {\r\n      $log.info('Info: ' + message, data);\r\n    }\r\n\r\n    function warn(message, data) {\r\n      $log.warn('Warning: ' + message, data);\r\n    }\r\n\r\n    function error(message, data) {\r\n      $log.error('Error: ' + message, data);\r\n    }\r\n  }\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  routehelper.$inject = [\"$rootScope\", \"logger\"];\r\n  angular.module('blocks.routehelper')\r\n    .factory('routehelper', routehelper);\r\n\r\n  /* @ngInject */\r\n  function routehelper($rootScope, logger) {\r\n\r\n    return {\r\n      'init': init\r\n    };\r\n\r\n    ///////////////\r\n\r\n    function init() {\r\n      stateChangeError();\r\n      stateChangeSuccess();\r\n      stateNotFound();\r\n    }\r\n\r\n    function stateChangeError() {\r\n      $rootScope.$on('$stateChangeError',\r\n        function (event, toState, toParams, fromState) {\r\n          logger.error('change state error.', [fromState, toState]);\r\n          // $location.path(routePath);\r\n        }\r\n      );\r\n    }\r\n\r\n    function stateChangeSuccess() {\r\n      $rootScope.$on('$stateChangeSuccess',\r\n        function (event, toState) {\r\n          logger.success('change state success. state = ', toState);\r\n        }\r\n      );\r\n    }\r\n\r\n    function stateNotFound() {\r\n      $rootScope.$on('$stateNotFound',\r\n        function (event, toState) {\r\n          logger.warning('state not found. state = ', toState.to);\r\n          logger.warning('state not found. params = ', toState.toParams);\r\n        }\r\n      );\r\n    }\r\n  }\r\n})();\n(function () {\r\n  'use strict';\r\n\r\n  config.$inject = [\"$provide\"];\r\n  exceptionHandlerDecorator.$inject = [\"$delegate\", \"exceptionHandler\", \"logger\"];\r\n  angular.module('blocks.exception')\r\n    .config(config);\r\n\r\n  /* @ngInject */\r\n  function config($provide) {\r\n    // add prefix to log message\r\n    $provide.decorator('$exceptionHandler', exceptionHandlerDecorator);\r\n  }\r\n\r\n  /* @ngInject */\r\n  function exceptionHandlerDecorator($delegate, exceptionHandler, logger) {\r\n    var appErrorPrefix = exceptionHandler.config.appErrorPrefix;\r\n    return function (exception, cause) {\r\n\r\n      $delegate(exception, cause);\r\n\r\n      var errorData = {\r\n        exception: exception,\r\n        cause: cause\r\n      };\r\n      exception.message = appErrorPrefix + exception.message;\r\n      logger.error(exception.message, errorData);\r\n    };\r\n  }\r\n\r\n})();"],"sourceRoot":"/source/"}